"use client";
import React, { useState } from 'react';
import Image from 'next/image';
import Link from 'next/link';
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { HoverCard, HoverCardContent, HoverCardTrigger } from "@/components/ui/hover-card";
import { FaGithub, FaLinkedin, FaEnvelope, FaWhatsapp, FaGlobe, FaCode, FaGraduationCap, FaBriefcase, FaMapMarkerAlt, FaPhone, FaTimes } from 'react-icons/fa';
import { SiJavascript, SiTypescript, SiReact, SiNextdotjs, SiNodedotjs, SiPython, SiGit, SiMysql, SiPostgresql, SiLinux } from 'react-icons/si';
import Navbar from './components/Navbar';

const Portfolio = () => {
  const [selectedProject, setSelectedProject] = useState(null);

  const socialLinks = [
    {
      icon: <FaGithub className="w-6 h-6" />,
      url: "https://github.com/Scandere78",
      label: "GitHub",
      color: "hover:text-gray-100"
    },
    {
      icon: <FaLinkedin className="w-6 h-6" />,
      url: "https://www.linkedin.com/in/scandere-tej-a43630297/",
      label: "LinkedIn",
      color: "hover:text-blue-400"
    },
    {
      icon: <FaEnvelope className="w-6 h-6" />,
      url: "mailto:scanderetejpro@gmail.com",
      label: "Email",
      color: "hover:text-red-400"
    },
    {
      icon: <FaWhatsapp className="w-6 h-6" />,
      url: "https://wa.me/33651306697",
      label: "WhatsApp",
      color: "hover:text-green-400"
    }
  ];

  const skills = [
    { icon: <SiNextdotjs />, name: "Next.js", color: "hover:text-gray-100" },
    { icon: <SiReact />, name: "React", color: "hover:text-blue-400" },
    { icon: <SiTypescript />, name: "TypeScript", color: "hover:text-blue-600" },
    { icon: <SiJavascript />, name: "JavaScript", color: "hover:text-yellow-400" },
    { icon: <SiNodedotjs />, name: "Node.js", color: "hover:text-green-500" },
    { icon: <SiPython />, name: "Python", color: "hover:text-yellow-300" },
    { icon: <SiGit />, name: "Git", color: "hover:text-orange-500" },
    { icon: <SiMysql />, name: "MySQL", color: "hover:text-blue-500" },
    { icon: <SiPostgresql />, name: "PostgreSQL", color: "hover:text-blue-400" },
    { icon: <SiLinux />, name: "Linux", color: "hover:text-yellow-500" }
  ];

  const languages = [
    { name: "FranÃ§ais", level: "Bilingue", flag: "ðŸ‡«ðŸ‡·" },
    { name: "Anglais", level: "B2", flag: "ðŸ‡¬ðŸ‡§" },
  ];

  const timeline = [
    {
      year: "2024-2025",
      title: "Holberton School - Bachelor Architecture des logiciels",
      type: "formation",
      description: "Formation en dÃ©veloppement web et mobile, spÃ©cialisation Full Stack",
      icon: <FaGraduationCap className="w-5 h-5" />,
      location: "Paris"
    },
    {
      year: "2023-2024",
      title: "CNED",
      type: "formation",
      description: "BTS Services informatiques aux organisations - Option SLAM",
      icon: <FaGraduationCap className="w-5 h-5" />,
      location: "Poitiers"
    },
    {
      year: "2019-2020",
      title: "BaccalaurÃ©at Sciences de l'Informatique",
      type: "formation",
      description: "Mention Bien",
      icon: <FaGraduationCap className="w-5 h-5" />,
      location: "Tunisie"
    }
  ];

  const projects = [
    {
      id: 1,
      title: "E-commerce Platform",
      description: "Plateforme de vente en ligne complÃ¨te avec gestion des commandes, paiements et administration.",
      technologies: ["Next.js", "TypeScript", "Prisma", "Stripe"],
      image: "/projects/ecommerce.jpg",
      link: "#",
      category: "Fullstack",
      status: "En cours",
      startDate: "2025-01",
      completion: 75,
    },
    {
      id: 2,
      title: "Dashboard Analytics",
      description: "Interface d'analyse de donnÃ©es avec graphiques interactifs et tableaux de bord personnalisables.",
      technologies: ["React", "D3.js", "Node.js", "MongoDB"],
      image: "/projects/dashboard.jpg",
      link: "#",
      category: "Frontend",
      status: "LivrÃ©",
      startDate: "2024-11",
      endDate: "2025-03",
      completion: 100,
    },
    {
      id: 3,
      title: "API REST Microservices",
      description: "Architecture microservices avec authentification JWT et documentation Swagger.",
      technologies: ["Node.js", "Express", "Docker", "PostgreSQL"],
      image: "/projects/api.jpg",
      link: "#",
      category: "Backend",
      status: "En attente",
      startDate: "2025-06",
      completion: 0,
    },
    {
      id: 4,
      title: "Application Mobile",
      description: "App mobile cross-platform avec gÃ©olocalisation et notifications push.",
      technologies: ["React Native", "Firebase", "Redux", "Expo"],
      image: "/projects/mobile.jpg",
      link: "#",
      category: "Mobile",
      status: "En cours",
      startDate: "2025-04",
      completion: 45,
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-black via-neutral-900 to-neutral-800">
      <Navbar />

      {/* Hero Section */}
      <section className="relative min-h-screen flex items-center">
        <div className="absolute inset-0 bg-gradient-to-br from-black via-neutral-900 to-neutral-800"></div>
        <div className="container mx-auto px-4 z-10">
          <div className="flex flex-col md:flex-row items-center justify-between gap-12">
            <div className="flex-1 text-center md:text-left">
              <h1 className="text-5xl md:text-6xl font-bold text-white mb-6">
                Scandere <span className="text-blue-500">Tej</span>
              </h1>
              <h2 className="text-2xl md:text-3xl text-gray-300 mb-8">
                DÃ©veloppeur Full Stack
              </h2>
              <div className="flex justify-center md:justify-start items-center gap-4 mb-8">
                {socialLinks.map((link, index) => (
                  <HoverCard key={index}>
                    <HoverCardTrigger>
                      <a
                        href={link.url}
                        target="_blank"
                        rel="noopener noreferrer"
                        className={`text-gray-400 transition-colors duration-200 ${link.color}`}
                        aria-label={link.label}
                      >
                        {link.icon}
                      </a>
                    </HoverCardTrigger>
                    <HoverCardContent className="w-auto">
                      <p className="text-sm font-medium">{link.label}</p>
                    </HoverCardContent>
                  </HoverCard>
                ))}
              </div>
            </div>
            <div className="relative w-64 h-64 md:w-96 md:h-96">
              <div className="absolute inset-0 bg-blue-500/20 rounded-full blur-2xl transform -translate-x-2 translate-y-2"></div>
              <div className="relative rounded-full border-4 border-blue-500/30 overflow-hidden">
                <Image
                  src="/MOI.JPG"
                  alt="Profile"
                  fill
                  className="object-cover hover:scale-110 transition-transform duration-500"
                  style={{ objectPosition: "center 30%" }}
                  priority
                />
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Skills Section */}
      <section className="py-20 bg-neutral-900/50">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl md:text-4xl font-bold text-white text-center mb-12">
            CompÃ©tences & Technologies
          </h2>
          <div className="grid grid-cols-2 md:grid-cols-5 gap-6">
            {skills.map((skill, index) => (
              <Card key={index} className="bg-neutral-800/50 border-none group hover:bg-neutral-800 transition-all">
                <CardContent className="flex flex-col items-center p-6">
                  <div className={`text-4xl mb-3 transition-colors ${skill.color}`}>
                    {skill.icon}
                  </div>
                  <p className="text-gray-300 text-sm font-medium">{skill.name}</p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Languages Section */}
      <section className="py-16">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl font-bold text-white text-center mb-8">Langues</h2>
          <div className="flex justify-center gap-6">
            {languages.map((lang, index) => (
              <Card key={index} className="bg-neutral-800/50 border-none group hover:bg-neutral-800 transition-all">
                <CardContent className="flex items-center gap-3 p-6">
                  <span className="text-3xl">{lang.flag}</span>
                  <div>
                    <p className="text-white font-medium">{lang.name}</p>
                    <p className="text-gray-400 text-sm">{lang.level}</p>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Timeline Section */}
      <section className="py-20">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl md:text-4xl font-bold text-white text-center mb-12">
            Parcours
          </h2>
          <div className="max-w-3xl mx-auto">
            {timeline.map((item, index) => (
              <div key={index} className="relative pl-8 pb-12 last:pb-0">
                <div className="absolute left-0 top-0 h-full w-px bg-blue-500/20">
                  <div className="absolute top-0 left-1/2 -translate-x-1/2 w-4 h-4 rounded-full bg-blue-500"></div>
                </div>
                <Card className="bg-neutral-800/50 border-none hover:bg-neutral-800 transition-all">
                  <CardContent className="p-6">
                    <div className="flex items-center gap-3 mb-4">
                      <Badge variant="outline" className="bg-blue-500/10 text-blue-400 border-blue-500/30">
                        {item.year}
                      </Badge>
                      <Badge variant="outline" className="bg-neutral-800">
                        {item.location}
                      </Badge>
                    </div>
                    <h3 className="text-xl font-bold text-white mb-2">{item.title}</h3>
                    <p className="text-gray-400">{item.description}</p>
                  </CardContent>
                </Card>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Projects Section */}
      <section className="py-20 bg-neutral-900/50">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl md:text-4xl font-bold text-white text-center mb-12">
            Projets
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
            {projects.map((project) => (
              <Card
                key={project.id}
                className="bg-neutral-800/50 border-none group hover:bg-neutral-800/70 transition-all cursor-pointer overflow-hidden"
                onClick={() => setSelectedProject(project)}
              >
                <div className="relative h-48">
                  <Image
                    src={project.image}
                    alt={project.title}
                    fill
                    className="object-cover group-hover:scale-105 transition-transform duration-500"
                  />
                  <Badge
                    className={`absolute top-3 right-3
                      ${project.status === 'En cours' ? 'bg-blue-500' :
                        project.status === 'TerminÃ©' ? 'bg-green-500' :
                        project.status === 'LivrÃ©' ? 'bg-purple-500' :
                        'bg-yellow-500'} hover:opacity-90`}
                  >
                    {project.status}
                  </Badge>
                </div>
                <CardContent className="p-6">
                  <h3 className="text-xl font-bold text-white mb-3">{project.title}</h3>
                  <p className="text-gray-300 mb-4">{project.description}</p>
                  <div className="mb-4">
                    <div className="flex justify-between text-sm text-gray-400 mb-1">
                      <span>Progression</span>
                      <span>{project.completion}%</span>
                    </div>
                    <div className="w-full h-2 bg-neutral-700 rounded-full">
                      <div
                        className={`h-full rounded-full transition-all duration-500
                          ${project.completion === 100 ? 'bg-green-500' :
                            project.completion >= 75 ? 'bg-blue-500' :
                            project.completion >= 50 ? 'bg-yellow-500' :
                            'bg-orange-500'}`}
                        style={{ width: `${project.completion}%` }}
                      />
                    </div>
                  </div>
                  <div className="flex flex-wrap gap-2">
                    {project.technologies.map((tech, index) => (
                      <Badge
                        key={index}
                        variant="secondary"
                        className="bg-neutral-700 hover:bg-neutral-600"
                      >
                        {tech}
                      </Badge>
                    ))}
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>
    </div>
  );
};

export default Portfolio;
